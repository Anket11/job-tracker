{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = [];\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    getDataMongo: (state, action) => {\n      console.log(\"Called to server\");\n      axios.get(`http://localhost:5500/api/`).then(response => {\n        console.log(response.data);\n      });\n    },\n    addCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n      state[action.payload.idx].cardsList.push({\n        role: action.payload.jobTitle,\n        companyName: action.payload.company\n      });\n      return state;\n    },\n    deleteCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      let newCardList = state[action.payload.indexOfList].cardsList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1); // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardsList: []\n      });\n    },\n    deleteList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  getDataMongo,\n  addCard,\n  deleteCard,\n  newList,\n  deleteList,\n  editListName\n} = listsSlice.actions;\nexport default listsSlice.reducer;","map":{"version":3,"names":["createSlice","current","axios","initialState","listsSlice","name","reducers","getDataMongo","state","action","console","log","get","then","response","data","addCard","payload","idx","cardsList","push","role","jobTitle","companyName","company","deleteCard","newCardList","indexOfList","indexOfCard","splice","newList","listName","deleteList","filter","item","index","editListName","title","actions","reducer"],"sources":["/Users/anketpatil/Desktop/Web Development/job-tracker/client/src/redux/listsSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = [];\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    getDataMongo: (state, action) =>{\n      console.log(\"Called to server\");\n    axios.get(`http://localhost:5500/api/`).then((response) => {\n      console.log(response.data);\n    });\n\n    },\n    addCard: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n\n      state[action.payload.idx].cardsList.push({\n        role: action.payload.jobTitle,\n        companyName: action.payload.company,\n      });\n      return state;\n    },\n    deleteCard: (state = initialState, action) => {\n      let newCardList = state[action.payload.indexOfList].cardsList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1);\n      // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: (state = initialState, action) => {\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardsList: [],\n      });\n    },\n    deleteList: (state = initialState, action) => {\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { getDataMongo,addCard, deleteCard, newList, deleteList, editListName } = listsSlice.actions;\n\nexport default listsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}