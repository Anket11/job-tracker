{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nconst initialState = [];\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    storeData: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      // console.log(current(state));\n      return action.payload;\n    },\n    addCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state)); // console.log(action.payload);\n      // console.log(current(state[action.payload.idx].cardList));\n\n      const newCard = {\n        role: action.payload.jobTitle,\n        companyName: action.payload.company\n      };\n      axios.get(`http://localhost:5500/api/` + state[action.payload.idx]._id).then(response => {\n        dispatch(storeData(response.data));\n      });\n      state[action.payload.idx].cardList.push(newCard);\n      return state;\n    },\n    deleteCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      let newCardList = state[action.payload.indexOfList].cardList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1); // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardList: []\n      });\n    },\n    deleteList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  storeData,\n  addCard,\n  deleteCard,\n  newList,\n  deleteList,\n  editListName\n} = listsSlice.actions;\nexport default listsSlice.reducer;","map":{"version":3,"names":["createSlice","current","initialState","listsSlice","name","reducers","storeData","state","action","payload","addCard","console","log","newCard","role","jobTitle","companyName","company","axios","get","idx","_id","then","response","dispatch","data","cardList","push","deleteCard","newCardList","indexOfList","indexOfCard","splice","newList","listName","deleteList","filter","item","index","editListName","title","actions","reducer"],"sources":["/Users/anketpatil/Desktop/Web Development/job-tracker/client/src/redux/listsSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    storeData: (state = initialState, action) => {\n      // console.log(current(state));\n     return (action.payload);\n      \n    },\n    addCard: (state = initialState, action) => {\n      console.log(current(state));\n      // console.log(action.payload);\n      // console.log(current(state[action.payload.idx].cardList));\n      const newCard = {\n        role: action.payload.jobTitle,\n        companyName: action.payload.company,\n      }\n      axios.get(`http://localhost:5500/api/` + state[action.payload.idx]._id).then((response) => {\n      dispatch(storeData(response.data));\n    });\n      state[action.payload.idx].cardList.push(newCard);\n      return state;\n    },\n    deleteCard: (state = initialState, action) => {\n      let newCardList = state[action.payload.indexOfList].cardList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1);\n      // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: (state = initialState, action) => {\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardList: [],\n      });\n    },\n    deleteList: (state = initialState, action) => {\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { storeData,addCard, deleteCard, newList, deleteList, editListName } = listsSlice.actions;\n\nexport default listsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}