{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = [];\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    getDataMongo: (state, action) => {\n      const list = [];\n      console.log(\"Called to server\");\n      axios.get(`http://localhost:5500/api/`).then(response => {\n        list = response.data;\n      });\n      return list;\n    },\n    addCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n      state[action.payload.idx].cardsList.push({\n        role: action.payload.jobTitle,\n        companyName: action.payload.company\n      });\n      return state;\n    },\n    deleteCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      let newCardList = state[action.payload.indexOfList].cardsList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1); // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardsList: []\n      });\n    },\n    deleteList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  getDataMongo,\n  addCard,\n  deleteCard,\n  newList,\n  deleteList,\n  editListName\n} = listsSlice.actions;\nexport default listsSlice.reducer;","map":{"version":3,"names":["createSlice","current","axios","initialState","listsSlice","name","reducers","getDataMongo","state","action","list","console","log","get","then","response","data","addCard","payload","idx","cardsList","push","role","jobTitle","companyName","company","deleteCard","newCardList","indexOfList","indexOfCard","splice","newList","listName","deleteList","filter","item","index","editListName","title","actions","reducer"],"sources":["/Users/anketpatil/Desktop/Web Development/job-tracker/client/src/redux/listsSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = [];\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    getDataMongo: (state, action) =>{\n      const list= [];\n      console.log(\"Called to server\");\n    axios.get(`http://localhost:5500/api/`).then((response) => {\n      list = (response.data);\n    });\n    return list;\n    },\n    addCard: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n\n      state[action.payload.idx].cardsList.push({\n        role: action.payload.jobTitle,\n        companyName: action.payload.company,\n      });\n      return state;\n    },\n    deleteCard: (state = initialState, action) => {\n      let newCardList = state[action.payload.indexOfList].cardsList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1);\n      // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: (state = initialState, action) => {\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardsList: [],\n      });\n    },\n    deleteList: (state = initialState, action) => {\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { getDataMongo,addCard, deleteCard, newList, deleteList, editListName } = listsSlice.actions;\n\nexport default listsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,OAD8B;EAEpCF,YAFoC;EAGpCG,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;MAC9B,MAAMC,IAAI,GAAE,EAAZ;MACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;MACFV,KAAK,CAACW,GAAN,CAAW,4BAAX,EAAwCC,IAAxC,CAA8CC,QAAD,IAAc;QACzDL,IAAI,GAAIK,QAAQ,CAACC,IAAjB;MACD,CAFD;MAGA,OAAON,IAAP;IACC,CARO;IASRO,OAAO,EAAE,YAAkC;MAAA,IAAjCT,KAAiC,uEAAzBL,YAAyB;MAAA,IAAXM,MAAW;MACzCE,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACO,KAAD,CAAnB;MACAG,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACS,OAAnB;MACAP,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACO,KAAK,CAACC,MAAM,CAACS,OAAP,CAAeC,GAAhB,CAAL,CAA0BC,SAA3B,CAAnB;MAEAZ,KAAK,CAACC,MAAM,CAACS,OAAP,CAAeC,GAAhB,CAAL,CAA0BC,SAA1B,CAAoCC,IAApC,CAAyC;QACvCC,IAAI,EAAEb,MAAM,CAACS,OAAP,CAAeK,QADkB;QAEvCC,WAAW,EAAEf,MAAM,CAACS,OAAP,CAAeO;MAFW,CAAzC;MAIA,OAAOjB,KAAP;IACD,CAnBO;IAoBRkB,UAAU,EAAE,YAAkC;MAAA,IAAjClB,KAAiC,uEAAzBL,YAAyB;MAAA,IAAXM,MAAW;MAC5C,IAAIkB,WAAW,GAAGnB,KAAK,CAACC,MAAM,CAACS,OAAP,CAAeU,WAAhB,CAAL,CAAkCR,SAApD;MACAT,OAAO,CAACC,GAAR,CAAYX,OAAO,CAAC0B,WAAD,CAAnB;MACAhB,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACS,OAAP,CAAeW,WAA3B;MACAF,WAAW,CAACG,MAAZ,CAAmBrB,MAAM,CAACS,OAAP,CAAeW,WAAlC,EAA+C,CAA/C,EAJ4C,CAK5C;MACA;MAEA;MACA;IACD,CA9BO;IA+BRE,OAAO,EAAE,YAAkC;MAAA,IAAjCvB,KAAiC,uEAAzBL,YAAyB;MAAA,IAAXM,MAAW;MACzCE,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACO,KAAD,CAAnB;MACAA,KAAK,CAACa,IAAN,CAAW;QACTW,QAAQ,EAAE,WADD;QAETZ,SAAS,EAAE;MAFF,CAAX;IAID,CArCO;IAsCRa,UAAU,EAAE,YAAkC;MAAA,IAAjCzB,KAAiC,uEAAzBL,YAAyB;MAAA,IAAXM,MAAW;MAC5CE,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACO,KAAK,CAACC,MAAM,CAACS,OAAR,CAAN,CAAnB;MACA,OAAOV,KAAK,CAAC0B,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAK3B,MAAM,CAACS,OAA/C,CAAP;IACD,CAzCO;IA0CRmB,YAAY,EAAE,YAAkC;MAAA,IAAjC7B,KAAiC,uEAAzBL,YAAyB;MAAA,IAAXM,MAAW;MAC9CE,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACO,KAAD,CAAnB;MACAG,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACS,OAAnB;MACAV,KAAK,CAACC,MAAM,CAACS,OAAP,CAAekB,KAAhB,CAAL,CAA4BJ,QAA5B,GAAuCvB,MAAM,CAACS,OAAP,CAAeoB,KAAtD;IACD;EA9CO;AAH0B,CAAD,CAA9B,C,CAqDP;;AACA,OAAO,MAAM;EAAE/B,YAAF;EAAeU,OAAf;EAAwBS,UAAxB;EAAoCK,OAApC;EAA6CE,UAA7C;EAAyDI;AAAzD,IAA0EjC,UAAU,CAACmC,OAA3F;AAEP,eAAenC,UAAU,CAACoC,OAA1B"},"metadata":{},"sourceType":"module"}