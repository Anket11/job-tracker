{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  listName: \"Wishlist\",\n  cardsList: [{\n    role: \"SDE 1\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 2\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 3\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 4\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 5\",\n    companyName: \"Google\"\n  }]\n}, {\n  listName: \"Applied\",\n  cardsList: [{\n    role: \"SDE 5\",\n    companyName: \"Amazon\"\n  }, {\n    role: \"SDE 6\",\n    companyName: \"Amazon\"\n  }, {\n    role: \"SDE 7\",\n    companyName: \"Amazon\"\n  }, {\n    role: \"SDE 8\",\n    companyName: \"Amazon\"\n  }]\n}, {\n  listName: \"Interview\",\n  cardsList: [{\n    role: \"SDE 9\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 10\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 11\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 12\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 13\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 9\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 10\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 11\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 12\",\n    companyName: \"Google\"\n  }, {\n    role: \"SDE 13\",\n    companyName: \"Google\"\n  }]\n}];\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    addCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n      state[action.payload.idx].cardsList.push({\n        role: action.payload.jobTitle,\n        companyName: action.payload.company\n      });\n      return state;\n    },\n    deleteCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state[action.payload.indexOfList].cardsList[action.payload.indexOfCard]));\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addCard,\n  deleteCard,\n  incrementByAmount\n} = listsSlice.actions;\nexport default listsSlice.reducer;","map":{"version":3,"names":["createSlice","current","initialState","listName","cardsList","role","companyName","listsSlice","name","reducers","addCard","state","action","console","log","payload","idx","push","jobTitle","company","deleteCard","indexOfList","indexOfCard","incrementByAmount","actions","reducer"],"sources":["/Users/anketpatil/Desktop/Web Development/job-tracker/src/redux/listsSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    listName: \"Wishlist\",\n    cardsList: [\n      {\n        role: \"SDE 1\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 2\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 3\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 4\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 5\",\n        companyName: \"Google\",\n      },\n    ],\n  },\n  {\n    listName: \"Applied\",\n    cardsList: [\n      {\n        role: \"SDE 5\",\n        companyName: \"Amazon\",\n      },\n      {\n        role: \"SDE 6\",\n        companyName: \"Amazon\",\n      },\n      {\n        role: \"SDE 7\",\n        companyName: \"Amazon\",\n      },\n      {\n        role: \"SDE 8\",\n        companyName: \"Amazon\",\n      },\n    ],\n  },\n  {\n    listName: \"Interview\",\n    cardsList: [\n      {\n        role: \"SDE 9\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 10\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 11\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 12\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 13\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 9\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 10\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 11\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 12\",\n        companyName: \"Google\",\n      },\n      {\n        role: \"SDE 13\",\n        companyName: \"Google\",\n      },\n    ],\n  },\n];\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    addCard: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n\n      state[action.payload.idx].cardsList.push({\n        role: action.payload.jobTitle,\n        companyName: action.payload.company,\n      });\n      return state;\n    },\n    deleteCard: (state = initialState, action) => {\n      console.log(current(state[action.payload.indexOfList].cardsList[action.payload.indexOfCard]));\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addCard, deleteCard, incrementByAmount } = listsSlice.actions;\n\nexport default listsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}